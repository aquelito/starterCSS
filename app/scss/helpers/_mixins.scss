
// ==========================================================================
// Mixins
// ==========================================================================

/*

# Mixins

*/

// @mixin establish-baseline
@mixin establish-baseline($font-size: $base-font-size, $font-family: $font-serifs) {
  $taille: ($font-size / $browser-default-font-size * 100);
  $line-height: rhythm(1, $font-size);
  html {
    font: #{$taille}%/#{$line-height} $font-family;
    -webkit-font-smoothing: antialiased;
    -webkit-text-size-adjust: 100%;
    -ms-text-size-adjust: 100%;
  }
}

// Calculate rhythm units
@function rhythm(
  $lines: 1,
  $font-size: $base-font-size
) {
  @if not $relative-font-sizing and $font-size != $base-font-size {
    @warn "$relative-font-sizing is false but a relative font size was passed to the rhythm function";
  }
  $rhythm: $font-unit * $lines * $base-line-height / $font-size;
  @return $rhythm;
}

@function lines-for-font-size($font-size) {
  $lines: ceil($font-size / $base-line-height);
  @if $lines * $base-line-height - $font-size < 1 {
    $lines: $lines + 1;
  }
  @return $lines;
}

@mixin font-size($taille:$base-font-size) {
  font-size: $font-unit * $taille / $base-font-size;
  line-height: rhythm(lines-for-font-size($taille), if($relative-font-sizing, $taille, $base-font-size));
}

/*
## Media Queries

Variable `$keyword` possible egal to :

* `large` : screen and min-width: 1200px
* `medium` : screen and min-width: 769px
* `small` : screen and max-width: 768px
* `tiny` : screen and max-width: 640px
* `retina` : *

```
@include mq($keyword) {
  ...
}
```

*/

@mixin mq($keyword) {
  @if $keyword == large {
    @media screen and (min-width: 1200px) { @content; }
  }
  @if $keyword == medium {
    @media screen and (min-width: 769px) { @content; }
  }
  @if $keyword == small {
    @media screen and (max-width: 768px) { @content; }
  }
  @if $keyword == tiny  {
    @media screen and (max-width: 640px) { @content; }
  }
  @if $keyword == retina {
    @media
      only screen and (-webkit-min-device-pixel-ratio: 2),
      only screen and (min-resolution: 192dpi),
      only screen and (min-resolution: 2dppx) {
        @content;
    }
  }
}

// @mixin inline-block
// ==========================================================================

@mixin inline-block($alignment: top) {
  display: inline-block;
  @if $alignment and $alignment != none {
    vertical-align: $alignment;
  }
  @if $support-for-ie7 {
    .ie7 & { display: inline; zoom: 1; }
  }
}

